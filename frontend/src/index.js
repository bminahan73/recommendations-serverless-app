"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("bootstrap");
require("./main.scss");
const indexData = {
    cards: [
        {
            title: "something1",
            header: "something1",
            content: "something1",
            color: "secondary"
        },
        {
            title: "something2",
            header: "something2",
            content: "something2",
            color: "warning"
        }
    ],
    progressColor: "danger"
};
const somethingElseData = {
    cards: [
        {
            title: "something3",
            header: "something3",
            content: "something3",
            color: "danger"
        },
        {
            title: "something4",
            header: "something4",
            content: "something4",
            color: "primary"
        }
    ],
    progressColor: "primary"
};
const pageData = document.title === "Index" ? indexData : somethingElseData;
function createCardElement(card) {
    const cardElement = document.createElement('div');
    cardElement.className = `card text-white bg-${card.color} mb-3`;
    const cardHeader = document.createElement('div');
    cardHeader.className = "card-header";
    cardHeader.innerText = card.header;
    const cardBody = document.createElement('div');
    cardBody.className = "card-body";
    const cardTitle = document.createElement('h5');
    cardTitle.className = "card-title";
    cardTitle.innerText = card.title;
    const cardText = document.createElement('p');
    cardText.className = "card-text";
    cardText.innerText = card.content;
    cardBody.appendChild(cardTitle);
    cardBody.appendChild(cardText);
    cardElement.appendChild(cardHeader);
    cardElement.appendChild(cardBody);
    return cardElement;
}
const cardsElement = document.getElementById("cards");
pageData.cards.map((cardData) => {
    cardsElement.appendChild(createCardElement(cardData));
});
const progressBarElement = document.getElementById("progressBar");
progressBarElement.classList.add(`bg-${pageData.progressColor}`);
let progress = 0;
const clicker = document.getElementById("clicker");
clicker.onclick = () => {
    progress++;
    if (progress < 100) {
        progressBarElement.setAttribute('aria-valuenow', progress.toString());
        progressBarElement.setAttribute('style', 'width:' + Number(progress) + '%');
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHFCQUFtQjtBQUNuQix1QkFBcUI7QUFJckIsTUFBTSxTQUFTLEdBQWE7SUFDeEIsS0FBSyxFQUFFO1FBQ0g7WUFDSSxLQUFLLEVBQUUsWUFBWTtZQUNuQixNQUFNLEVBQUUsWUFBWTtZQUNwQixPQUFPLEVBQUUsWUFBWTtZQUNyQixLQUFLLEVBQUUsV0FBVztTQUNyQjtRQUNEO1lBQ0ksS0FBSyxFQUFFLFlBQVk7WUFDbkIsTUFBTSxFQUFFLFlBQVk7WUFDcEIsT0FBTyxFQUFFLFlBQVk7WUFDckIsS0FBSyxFQUFFLFNBQVM7U0FDbkI7S0FDSjtJQUNELGFBQWEsRUFBRSxRQUFRO0NBQzFCLENBQUM7QUFFRixNQUFNLGlCQUFpQixHQUFhO0lBQ2hDLEtBQUssRUFBRTtRQUNIO1lBQ0ksS0FBSyxFQUFFLFlBQVk7WUFDbkIsTUFBTSxFQUFFLFlBQVk7WUFDcEIsT0FBTyxFQUFFLFlBQVk7WUFDckIsS0FBSyxFQUFFLFFBQVE7U0FDbEI7UUFDRDtZQUNJLEtBQUssRUFBRSxZQUFZO1lBQ25CLE1BQU0sRUFBRSxZQUFZO1lBQ3BCLE9BQU8sRUFBRSxZQUFZO1lBQ3JCLEtBQUssRUFBRSxTQUFTO1NBQ25CO0tBQ0o7SUFDRCxhQUFhLEVBQUUsU0FBUztDQUMzQixDQUFDO0FBRUYsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLEtBQUssS0FBSyxPQUFPLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLENBQUM7QUFFNUUsU0FBUyxpQkFBaUIsQ0FBQyxJQUFjO0lBQ3JDLE1BQU0sV0FBVyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEQsV0FBVyxDQUFDLFNBQVMsR0FBRyxzQkFBc0IsSUFBSSxDQUFDLEtBQUssT0FBTyxDQUFDO0lBRWhFLE1BQU0sVUFBVSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakQsVUFBVSxDQUFDLFNBQVMsR0FBRyxhQUFhLENBQUM7SUFDckMsVUFBVSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBRW5DLE1BQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0MsUUFBUSxDQUFDLFNBQVMsR0FBRyxXQUFXLENBQUM7SUFFakMsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQyxTQUFTLENBQUMsU0FBUyxHQUFHLFlBQVksQ0FBQztJQUNuQyxTQUFTLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7SUFFakMsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM3QyxRQUFRLENBQUMsU0FBUyxHQUFHLFdBQVcsQ0FBQztJQUNqQyxRQUFRLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7SUFFbEMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNoQyxRQUFRLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRS9CLFdBQVcsQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDcEMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUVsQyxPQUFPLFdBQVcsQ0FBQztBQUN2QixDQUFDO0FBRUQsTUFBTSxZQUFZLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUN0RCxRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFO0lBQzVCLFlBQVksQ0FBQyxXQUFXLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztBQUMxRCxDQUFDLENBQUMsQ0FBQztBQUVILE1BQU0sa0JBQWtCLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUNsRSxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sUUFBUSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUM7QUFFakUsSUFBSSxRQUFRLEdBQUcsQ0FBQyxDQUFDO0FBRWpCLE1BQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDbkQsT0FBTyxDQUFDLE9BQU8sR0FBRyxHQUFHLEVBQUU7SUFDbkIsUUFBUSxFQUFHLENBQUM7SUFDWixJQUFJLFFBQVEsR0FBRyxHQUFHLEVBQUU7UUFDaEIsa0JBQWtCLENBQUMsWUFBWSxDQUFDLGVBQWUsRUFBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUNyRSxrQkFBa0IsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFDLFFBQVEsR0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUMsR0FBRyxDQUFDLENBQUM7S0FDMUU7QUFDTCxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ2Jvb3RzdHJhcCc7XHJcbmltcG9ydCAnLi9tYWluLnNjc3MnO1xyXG5pbXBvcnQgeyBDYXJkSW5mbyB9IGZyb20gJy4vQ2FyZEluZm8nO1xyXG5pbXBvcnQgeyBQYWdlRGF0YSB9IGZyb20gJy4vUGFnZURhdGEnO1xyXG5cclxuY29uc3QgaW5kZXhEYXRhOiBQYWdlRGF0YSA9IHtcclxuICAgIGNhcmRzOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aXRsZTogXCJzb21ldGhpbmcxXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcjogXCJzb21ldGhpbmcxXCIsXHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwic29tZXRoaW5nMVwiLFxyXG4gICAgICAgICAgICBjb2xvcjogXCJzZWNvbmRhcnlcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aXRsZTogXCJzb21ldGhpbmcyXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcjogXCJzb21ldGhpbmcyXCIsXHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwic29tZXRoaW5nMlwiLFxyXG4gICAgICAgICAgICBjb2xvcjogXCJ3YXJuaW5nXCJcclxuICAgICAgICB9XHJcbiAgICBdLFxyXG4gICAgcHJvZ3Jlc3NDb2xvcjogXCJkYW5nZXJcIlxyXG59O1xyXG5cclxuY29uc3Qgc29tZXRoaW5nRWxzZURhdGE6IFBhZ2VEYXRhID0ge1xyXG4gICAgY2FyZHM6IFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRpdGxlOiBcInNvbWV0aGluZzNcIixcclxuICAgICAgICAgICAgaGVhZGVyOiBcInNvbWV0aGluZzNcIixcclxuICAgICAgICAgICAgY29udGVudDogXCJzb21ldGhpbmczXCIsXHJcbiAgICAgICAgICAgIGNvbG9yOiBcImRhbmdlclwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRpdGxlOiBcInNvbWV0aGluZzRcIixcclxuICAgICAgICAgICAgaGVhZGVyOiBcInNvbWV0aGluZzRcIixcclxuICAgICAgICAgICAgY29udGVudDogXCJzb21ldGhpbmc0XCIsXHJcbiAgICAgICAgICAgIGNvbG9yOiBcInByaW1hcnlcIlxyXG4gICAgICAgIH1cclxuICAgIF0sXHJcbiAgICBwcm9ncmVzc0NvbG9yOiBcInByaW1hcnlcIlxyXG59O1xyXG5cclxuY29uc3QgcGFnZURhdGEgPSBkb2N1bWVudC50aXRsZSA9PT0gXCJJbmRleFwiID8gaW5kZXhEYXRhIDogc29tZXRoaW5nRWxzZURhdGE7XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVDYXJkRWxlbWVudChjYXJkOiBDYXJkSW5mbykge1xyXG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGNhcmRFbGVtZW50LmNsYXNzTmFtZSA9IGBjYXJkIHRleHQtd2hpdGUgYmctJHtjYXJkLmNvbG9yfSBtYi0zYDtcclxuXHJcbiAgICBjb25zdCBjYXJkSGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBjYXJkSGVhZGVyLmNsYXNzTmFtZSA9IFwiY2FyZC1oZWFkZXJcIjtcclxuICAgIGNhcmRIZWFkZXIuaW5uZXJUZXh0ID0gY2FyZC5oZWFkZXI7XHJcblxyXG4gICAgY29uc3QgY2FyZEJvZHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGNhcmRCb2R5LmNsYXNzTmFtZSA9IFwiY2FyZC1ib2R5XCI7XHJcblxyXG4gICAgY29uc3QgY2FyZFRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDUnKTtcclxuICAgIGNhcmRUaXRsZS5jbGFzc05hbWUgPSBcImNhcmQtdGl0bGVcIjtcclxuICAgIGNhcmRUaXRsZS5pbm5lclRleHQgPSBjYXJkLnRpdGxlO1xyXG5cclxuICAgIGNvbnN0IGNhcmRUZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgY2FyZFRleHQuY2xhc3NOYW1lID0gXCJjYXJkLXRleHRcIjtcclxuICAgIGNhcmRUZXh0LmlubmVyVGV4dCA9IGNhcmQuY29udGVudDtcclxuXHJcbiAgICBjYXJkQm9keS5hcHBlbmRDaGlsZChjYXJkVGl0bGUpO1xyXG4gICAgY2FyZEJvZHkuYXBwZW5kQ2hpbGQoY2FyZFRleHQpO1xyXG5cclxuICAgIGNhcmRFbGVtZW50LmFwcGVuZENoaWxkKGNhcmRIZWFkZXIpO1xyXG4gICAgY2FyZEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FyZEJvZHkpO1xyXG5cclxuICAgIHJldHVybiBjYXJkRWxlbWVudDtcclxufVxyXG5cclxuY29uc3QgY2FyZHNFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYXJkc1wiKTtcclxucGFnZURhdGEuY2FyZHMubWFwKChjYXJkRGF0YSkgPT4ge1xyXG4gICAgY2FyZHNFbGVtZW50LmFwcGVuZENoaWxkKGNyZWF0ZUNhcmRFbGVtZW50KGNhcmREYXRhKSk7XHJcbn0pO1xyXG5cclxuY29uc3QgcHJvZ3Jlc3NCYXJFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9ncmVzc0JhclwiKTtcclxucHJvZ3Jlc3NCYXJFbGVtZW50LmNsYXNzTGlzdC5hZGQoYGJnLSR7cGFnZURhdGEucHJvZ3Jlc3NDb2xvcn1gKTtcclxuXHJcbmxldCBwcm9ncmVzcyA9IDA7XHJcblxyXG5jb25zdCBjbGlja2VyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjbGlja2VyXCIpO1xyXG5jbGlja2VyLm9uY2xpY2sgPSAoKSA9PiB7XHJcbiAgICBwcm9ncmVzcyArKztcclxuICAgIGlmIChwcm9ncmVzcyA8IDEwMCkge1xyXG4gICAgICAgIHByb2dyZXNzQmFyRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtdmFsdWVub3cnLHByb2dyZXNzLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgIHByb2dyZXNzQmFyRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywnd2lkdGg6JytOdW1iZXIocHJvZ3Jlc3MpKyclJyk7XHJcbiAgICB9XHJcbn0iXX0=